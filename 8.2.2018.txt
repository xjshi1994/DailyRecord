/*  public void getTotalRows() {
    List<String> list = new ArrayList<>();
    // add to list except base.
    for (Map.Entry<String, Map<String, Map<String, Object>>> entry : group.entrySet()) {
      if (!entry.getKey().equals("base")) {
        list.add(entry.getKey());
      }
    }

    // sort list
    Collections.sort(list);

    int num = 0;
    String prev = "";
    String cur = "";
    List<Integer> numList = new LinkedList<>();

    // start from last
    for (int i = list.size() - 1; i >= 0; i--) {
      // assume the first is the last level
      cur = list.get(i);

      // skip the entry with the same root
      if (UtilTools.removeLast(prev).equals(cur)) {
        prev = cur;
        continue;
      } else {
        // when meet with the different root, add the size of the to the numlist
        num = group.get(cur).size();
        numList.add(num);
      }
      prev = cur;
    }

    int result = 1;
    for (int i = 0; i < numList.size(); i++) {
      result = result * numList.get(i);
    }

    totalRow = result;
  }*/
